[{"/home/victoria/Documents/GitHub/movieapp/src/index.js":"1","/home/victoria/Documents/GitHub/movieapp/src/reportWebVitals.js":"2","/home/victoria/Documents/GitHub/movieapp/src/App.js":"3","/home/victoria/Documents/GitHub/movieapp/src/Components/MovieList.js":"4","/home/victoria/Documents/GitHub/movieapp/src/Components/PopUp.js":"5","/home/victoria/Documents/GitHub/movieapp/src/Components/NominationList.js":"6","/home/victoria/Documents/GitHub/movieapp/src/Components/Movie.js":"7"},{"size":498,"mtime":1610417208361,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1610417208361,"results":"10","hashOfConfig":"9"},{"size":7817,"mtime":1610458343881,"results":"11","hashOfConfig":"9"},{"size":2406,"mtime":1610457369022,"results":"12","hashOfConfig":"9"},{"size":995,"mtime":1610417208357,"results":"13","hashOfConfig":"9"},{"size":1422,"mtime":1610417208357,"results":"14","hashOfConfig":"9"},{"size":2202,"mtime":1610421409897,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1f0bgri",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"/home/victoria/Documents/GitHub/movieapp/src/index.js",[],["34","35"],"/home/victoria/Documents/GitHub/movieapp/src/reportWebVitals.js",[],"/home/victoria/Documents/GitHub/movieapp/src/App.js",[],"/home/victoria/Documents/GitHub/movieapp/src/Components/MovieList.js",["36"],"/home/victoria/Documents/GitHub/movieapp/src/Components/PopUp.js",["37","38"],"//-----------------------------------------------------------------------------------------\n// IMPORT STATEMENTS\n//-----------------------------------------------------------------------------------------\nimport React, { Component } from 'react';\n\n//-----------------------------------------------------------------------------------------\n// COMPONENT\n//-----------------------------------------------------------------------------------------\nclass PopUp extends Component {\n    \n    constructor(){\n        super();\n        this.delete = this.delete.bind(this);\n    }\n\n    delete(){\n        this.props.delete();\n    }\n\n    render(){\n        return (\n        <div id=\"popup1\" className=\"overlay\">\n            <div className=\"popup\">\n                <h2>Would you like to Delete the Movie?</h2>\n                <a onClick ={this.delete} className=\"close1\" href=\"#\">Yes</a>\n                <a className=\"close2\" href=\"#\">No</a>\n            </div>\n        </div>\n    )\n  }\n}\n\nexport default PopUp;","/home/victoria/Documents/GitHub/movieapp/src/Components/NominationList.js",["39"],"//-----------------------------------------------------------------------------------------\n// IMPORT STATEMENTS\n//-----------------------------------------------------------------------------------------\nimport React, { Component } from 'react';\n\n//-----------------------------------------------------------------------------------------\n// COMPONENT\n//-----------------------------------------------------------------------------------------\nclass NominationList extends Component {\n    \n    constructor(){\n        super();\n\n        this.clickedNomination = this.clickedNomination.bind(this);\n    }\n\n    clickedNomination(e){\n        this.props.trackNomination(e.target.text);\n    }\n\n    render(){\n        return (\n        <div className=\"nominationContainer\">\n            <h2 className=\"nominationHeader\">Nominations</h2>\n            {this.props.data.nominations.map((nomination) => {\n                return(\n                    <div key={nomination} className = \"individualNomination\">\n                        <a onClick={this.clickedNomination} value={nomination} href=\"#popup1\" className = \"nomination\" key={nomination}>{nomination}</a>\n                        <img className=\"deleteIcon\" src=\"https://github.com/SG-Command/movieapp/blob/master/src/Images/delete-white-24dp.svg?raw=true/\"/>\n                    </div>\n                )     \n            })}\n        </div>\n    )\n  }\n}\n\nexport default NominationList;","/home/victoria/Documents/GitHub/movieapp/src/Components/Movie.js",["40"],"//-----------------------------------------------------------------------------------------\n// IMPORT STATEMENTS\n//-----------------------------------------------------------------------------------------\nimport React, { Component } from 'react';\n\n//-----------------------------------------------------------------------------------------\n// COMPONENT\n//-----------------------------------------------------------------------------------------\nclass Movie extends Component {\n\n    constructor(){\n        super();\n        \n        this.state = {\n            nominateBtnClass: \"nominateBtn\"\n        }\n\n        this.createURL = this.createURL.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n    \n    componentDidUpdate(prevProps){\n        if(prevProps.data != this.props.data){\n            var i;\n            for(i=0; i< this.props.data.nominations.length; i++){\n                if(this.props.data.nominations[i] === this.props.movie.Title){\n                    this.setState({nominateBtnClass: \"nominateBtnDisabled\"});\n                } else {\n                    this.setState({nominateBtnClass: \"nominateBtn\"});\n                }\n            }\n           console.log(this.props.movie.Title, this.state.nominateBtnClass, \"Check\") \n        }\n    }\n\n    // FUNCTIONS\n    createURL(imdbID){\n        var newurl = 'https://www.imdb.com/title/'+imdbID+'/'\n        return newurl\n    }\n\n    handleClick = (e) => {\n        this.props.nominateMovie(e.target.value);\n    }\n\n    render(){\n        return(\n            <div className=\"movieContainer\">\n                <img className =\"poster\" alt=\"Movie Poster\" src={this.props.movie.Poster}></img>\n                <a className=\"title\" href={this.createURL(this.props.movie.imdbID)}>{this.props.movie.Title}</a>\n                    <div className=\"yearContainer\">\n                        <span className=\"descYear\">Year:</span>\n                        <span className=\"year\">{this.props.movie.Year}</span>\n                    </div>\n                    <button className={this.state.nominateBtnClass} value={this.props.movie.Title} onClick={this.handleClick}>Nominate</button>\n                </div>\n        )\n    }\n}\n\nexport default Movie;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":25,"column":17,"nodeType":"51","endLine":25,"endColumn":71},{"ruleId":"49","severity":1,"message":"50","line":26,"column":17,"nodeType":"51","endLine":26,"endColumn":48},{"ruleId":"52","severity":1,"message":"53","line":29,"column":25,"nodeType":"51","endLine":29,"endColumn":154},{"ruleId":"54","severity":1,"message":"55","line":23,"column":27,"nodeType":"56","messageId":"57","endLine":23,"endColumn":29},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Movie' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]
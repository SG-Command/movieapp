{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/victoria/Documents/GitHub/movieapp/src/Components/MovieList.js\";\n//-----------------------------------------------------------------------------------------\n// IMPORT STATEMENTS\n//-----------------------------------------------------------------------------------------\nimport React, { Component } from 'react';\nimport Movie from './Movie'; //-----------------------------------------------------------------------------------------\n// COMPONENT\n//-----------------------------------------------------------------------------------------\n\nclass MovieList extends Component {\n  constructor() {\n    super();\n\n    this.handleClick = e => {\n      this.props.nominateMovie(e.target.value);\n    };\n\n    this.state = {\n      nominateBtnClass: \"nominateBtn\"\n    };\n    this.createURL = this.createURL.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.updateNominateProps = this.updateNominateProps.bind(this);\n  } // FUNCTIONS\n\n\n  createURL(imdbID) {\n    var newurl = 'https://www.imdb.com/title/' + imdbID + '/';\n    return newurl;\n  }\n\n  updateNominateProps() {\n    var i;\n\n    for (i = 0; i < this.props.data.nominations.length; i++) {\n      if (this.props.data.nominations[i] === this.props.movie.Title) {\n        this.setState({\n          nominateBtnClass: \"nominateBtnDisabled\"\n        });\n      } else {\n        this.setState({\n          nominateBtnClass: \"nominateBtn\"\n        });\n      }\n    }\n\n    console.log(this.props.movie.Title, this.state.nominateBtnClass, \"Check\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieBox\",\n      children: this.props.data.movieList.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"poster\",\n            alt: \"Movie Poster\",\n            src: movie.Poster\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"title\",\n            href: this.createURL(movie.imdbID),\n            children: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"yearContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"descYear\",\n              children: \"Year:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"year\",\n              children: movie.Year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: this.state.nominateBtnClass,\n            value: movie.Title,\n            onClick: this.handleClick,\n            children: \"Nominate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, movie.Title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MovieList;","map":{"version":3,"sources":["/home/victoria/Documents/GitHub/movieapp/src/Components/MovieList.js"],"names":["React","Component","Movie","MovieList","constructor","handleClick","e","props","nominateMovie","target","value","state","nominateBtnClass","createURL","bind","updateNominateProps","imdbID","newurl","i","data","nominations","length","movie","Title","setState","console","log","render","movieList","map","Poster","Year"],"mappings":"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","sourcesContent":["//-----------------------------------------------------------------------------------------\n// IMPORT STATEMENTS\n//-----------------------------------------------------------------------------------------\nimport React, { Component } from 'react';\nimport Movie from './Movie';\n\n//-----------------------------------------------------------------------------------------\n// COMPONENT\n//-----------------------------------------------------------------------------------------\nclass MovieList extends Component {\n\n    constructor(){\n        super();\n        \n        this.state = {\n            nominateBtnClass: \"nominateBtn\"\n        }\n\n        this.createURL = this.createURL.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.updateNominateProps = this.updateNominateProps.bind(this);\n    }\n    \n    // FUNCTIONS\n    createURL(imdbID){\n        var newurl = 'https://www.imdb.com/title/'+imdbID+'/'\n        return newurl\n    }\n\n    handleClick = (e) => {\n        this.props.nominateMovie(e.target.value)\n    }\n\n    updateNominateProps(){\n            var i;\n            for(i=0; i< this.props.data.nominations.length; i++){\n                if(this.props.data.nominations[i] === this.props.movie.Title){\n                    this.setState({nominateBtnClass: \"nominateBtnDisabled\"});\n                } else {\n                    this.setState({nominateBtnClass: \"nominateBtn\"});\n                }\n            }\n           console.log(this.props.movie.Title, this.state.nominateBtnClass, \"Check\") \n    }\n\n    render(){\n        return (\n            <div className=\"movieBox\">\n            {this.props.data.movieList.map((movie) => {\n                return(\n                    <div key={movie.Title} className=\"movieContainer\">\n                        <img className =\"poster\" alt=\"Movie Poster\" src={movie.Poster}></img>\n                        <a className=\"title\" href={this.createURL(movie.imdbID)}>{movie.Title}</a>\n                            <div className=\"yearContainer\">\n                                <span className=\"descYear\">Year:</span>\n                                <span className=\"year\">{movie.Year}</span>\n                            </div>\n                        <button className={this.state.nominateBtnClass} value={movie.Title} onClick={this.handleClick}>Nominate</button>\n                    </div>\n                )     \n            })}\n            </div>\n        )\n    }\n}\n\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}
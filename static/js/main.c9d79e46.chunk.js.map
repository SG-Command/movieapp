{"version":3,"sources":["Components/MovieList.js","App.js","reportWebVitals.js","index.js"],"names":["MovieList","createURL","bind","imdbID","this","props","data","movieList","map","movie","console","log","href","Title","Year","Type","src","Poster","Component","App","state","nominations","titleSearch","searchAPI","fetch","then","response","json","setState","Search","catch","error","type","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNA6CeA,E,kDAnCX,aAAc,IAAD,8BACT,gBAEKC,UAAY,EAAKA,UAAUC,KAAf,gBAHR,E,sDAOHC,GAEN,MADa,8BAA8BA,EAAO,M,+BAI7C,IAAD,OACJ,OACA,8BACI,8BACCC,KAAKC,MAAMC,KAAKC,UAAUC,KAAI,SAACC,GAE5B,OADAC,QAAQC,IAAIF,GAER,gCACA,mBAAGG,KAAM,EAAKX,UAAUQ,EAAMN,QAA9B,SAAwCM,EAAMI,QAC9C,4BAAIJ,EAAMK,OACV,4BAAIL,EAAMM,OACV,qBAAKC,IAAKP,EAAMQ,SAChB,gDALUR,EAAMI,kB,GArBZK,aC2CTC,E,kDAxCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CAAGb,UAAW,GACXc,YAAa,GACbC,YAAa,IAC7B,EAAKC,UAAY,EAAKA,UAAUrB,KAAf,gBANN,E,wDAUD,IAAD,OACTQ,QAAQC,IAAI,kBACZa,MAAM,8DAA8DC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAnB,GACzG,EAAKsB,SAAS,CAACrB,UAAWD,EAAKuB,YAC9BC,OAAM,SAAAC,GAAK,OAAIrB,QAAQC,IAAI,QAASoB,Q,+BAKvC,OACE,gCACE,8CACA,iDACA,6CACA,uBAAOC,KAAK,SACZ,wBAAQC,QAAS7B,KAAKmB,UAAtB,oBACA,qCACA,uBAAOS,KAAK,WACZ,wCACA,8BACA,cAAC,EAAD,CAAW1B,KAAMF,KAAKgB,UAEtB,oD,GAlCUF,aCGHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c9d79e46.chunk.js","sourcesContent":["//-----------------------------------------------------------------------------------------\n// IMPORT STATEMENTS\n//-----------------------------------------------------------------------------------------\nimport React, { Component } from 'react';\n\n//-----------------------------------------------------------------------------------------\n// COMPONENT\n//-----------------------------------------------------------------------------------------\nclass MovieList extends Component {\n\n    constructor(){\n        super();\n\n        this.createURL = this.createURL.bind(this)\n    }\n    \n    // FUNCTIONS\n    createURL(imdbID){\n        var newurl = 'https://www.imdb.com/title/'+imdbID+'/'\n        return newurl\n    }\n\n    render(){\n        return (\n        <div>\n            <div>\n            {this.props.data.movieList.map((movie) => {\n                console.log(movie)\n                return(\n                    <div key={movie.Title}>\n                    <a href={this.createURL(movie.imdbID)}>{movie.Title}</a>\n                    <p>{movie.Year}</p>\n                    <p>{movie.Type}</p>\n                    <img src={movie.Poster}></img>\n                    <button>Nominate</button>\n                    \n                    </div>\n                )     \n            })}\n            </div>\n        </div>\n    )\n  }\n}\n\nexport default MovieList;","//-----------------------------------------------------------------------------------------\n// IMPORT STATEMENTS\n//-----------------------------------------------------------------------------------------\nimport React, { Component } from 'react';\nimport MovieList from './Components/MovieList';\n\n//-----------------------------------------------------------------------------------------\n// COMPONENT\n//-----------------------------------------------------------------------------------------\nclass App extends Component {\n\n  constructor(){\n    super();\n\n    this.state = {  movieList: [],\n                    nominations: [],\n                    titleSearch: \"\"}\n    this.searchAPI = this.searchAPI.bind(this)\n\n  }\n\n  searchAPI(){\n    console.log(\"Button Clicked\");\n    fetch('http://www.omdbapi.com/?i=tt3896198&apikey=e919a77&s=blade').then(response => response.json()).then(data => {\n      this.setState({movieList: data.Search},);\n    }).catch(error => console.log('error', error));\n  }\n\n\n  render(){\n    return (\n      <div>\n        <h1>The Shoppies</h1>\n        <h2>Search Criteria</h2>\n        <p>Movie Title:</p>\n        <input type=\"text\"></input>\n        <button onClick={this.searchAPI}>Search</button>\n        <p>Year</p>\n        <input type=\"number\"></input>\n        <h2>Movies</h2>\n        <div>\n        <MovieList data={this.state}/>\n        </div>\n        <h2>Nominations</h2>\n      </div>\n\n      \n    )\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}